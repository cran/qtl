
Revision history for the R/qtl package
----------------------------------------------------------------------
copyright (c) 2001-4, Karl W Broman, Johns Hopkins University
Licensed under the GNU General Public License version 2 (June, 1991)
http://www.biostat.jhsph.edu/~kbroman/qtl
----------------------------------------------------------------------

Version 0.98, 9/11/2004:

Major changes:

  There is no longer an argument "sep" for the function read.cross.
  Instead, we use "...", which is passed to the function read.table
  (all this just for the "csv" format).  (sep="," is still assumed for
  that format).  This change allows one to use sep=";" and dec=","
  which many people prefer.

  The function read.cross now automatically converts X chromosome
  genotype data into the standard internal format (with all
  individuals coded like an autosome in a backcross).

  The functions scanone() and scantwo() were revised so that they
  treat the X chromosome appropriately.  The argument "x.treatment"
  has been deleted.  What had been x.treatment="full" (namely, that
  hemizygous genotypes are considered different from homozygous
  genotypes) is now forced.  The big change concerns the "null
  hypothesis" for the X chromosome, which includes sex and/or "pgm" as
  covariates, in order to avoid spurious linkage on the X due to sex
  differences in the phenotype.  See the help files for these
  functions for details.  Note that the output of the scantwo function
  has changed somewhat; it would be best to re-run scantwo with this
  new version of the software.

  Added a function movemarker() for moving a marker from one
  chromosome to another.

  Revised scanone(), scantwo(), discan(), vbscan() and plot.info() so
  that inter-marker positions are cited as "c*.loc*" rather than
  "loc*.c*" or "loc*".  Added a function convert.scanone() for
  converting scanone output to the new format.  (The new plot.scantwo
  will interpret, for the old version of scanone output, every
  inter-marker position as a marker.)

Minor changes:

  Added a function find.pheno() [from Brian Yandell] for finding the
  phenotype column with a particular name.

  Added a function find.flanking() [from Brian Yandell], which is
  similar to find.marker(), but gives not just the closest marker
  but also the left- and right-flanking markers.

  Added a function print.cross() which prints a short message and then
  calls summary.cross().  This was added in order to avoid the
  essentially always unintentional printing of an entire (generally
  quite large) cross object.

  Modified summary.scantwo to allow a type option to get summaries
  based on peak "joint" or "inter" and to allow negative thresholds
  relative to max joint, inter, or individual LODs [from Brian
  Yandell; I'm not really sure what this means]. 

  Modified plot.scantwo to modify the contour option, making 1.5 from
  the peak the default on each half-image, and to take a numeric
  vector of drops from the peaks.  Added arguments col.scheme and
  gamma for different color schemes [from Brian Yandell].

  Hugely sped up plot.scantwo for the case of lower="cond-int" and
  lower="cond-add"!  (By hugely, I mean by a factor of 50 or more.)

  Added a function summary.map() for giving summary information about
  a genetic map.

  In read.cross, if chromosome names start with "chr" or "chromosome"
  (ignoring case) these initial strings are removed.

  est.rf now returns a warning if a marker appears to have its
  genotypes miscoded (so that it shows a rec. frac. > 0.5 with 
  LOD > 3).   

  Deleted the function pull.chr(), which was deprecated in version
  0.89 in Nov, 2001.  You can use subset.cross() instead.

  Fixed a bug in calc.errorlod regarding the X chromosome in an
  intercross.   

  read.cross with format="qtlcart" printed on screen the number of
  individuals but called it the number of phenotypes.  Brian Yandell
  provided another revision to this, to fix bugs regarding phenotypes 
  that are factors.

  Fixed a slight bug in summary.cross() in the case that a cross
  contains no autosomal data.
  
  Fixed a bug in read.cross for the mapmaker format; if a marker or
  phenotype name were listed without any data, an error resulted.

  Fixed a bug in summary.scanone which resulted in multiple rows being
  returned for a single chromosome if multiple positions shared the
  same maximal LOD score.

  Fixed bugs in plot.scanone and plot.scantwo for the case that the
  "chr" argument was used with chromosomes not in the usual order.

  read.cross with format="csv" now prints a warning if unusual entries
  are seen in the genotype data.

  Revised the geno.table() function so that its first column is the
  chromosome number

  Modified read.cross.qtx(); "X" or "x" in a phenotype is a missing
  value.

  Changed a call to print.coefmat() to a call to printCoefmat(), as
  the former is being discarded in favor of the latter.

  Changed the name of the utility function fixXdata() to
  reviseXdata().  This function deals with the X chromosome genotypes
  in scanone() and scantwo().

  Modified the source code in hmm_bc.c, hmm_f2.c, hmm_main.h so that
  we don't repeatedly calculate log(0.5), log(2.0) and log(0.25), but 
  rather rely on #define statements

  Got rid of the WIN32 stuff in addlog and subtractlog in util.c,
  which were used in version 0.97 as I'd not been able to get log1p to
  work. 

  plot.missing now gives a more meaningful error if the argument
  "reorder" is greater than the number of phenotypes.

  I split up the read.cross.R file into several smaller files, for
  more easy revisions.

  Revised the function comparecrosses(), adding an argument "tol" so
  that the genetic maps and phenotypes do not need to be *exactly* the
  same, but can be identical to within the specified tolerance, "tol".
  Also, a warning (rather than an error) is produced if the
  inter-marker distances are the same but the position of the initial
  marker is different.

  Fixed a slight bug in write.cross for the case of phenotypes that
  are factors.

  Fixed a problem in read.cross for format "gary"; now I pass the
  "na.strings" argument for reading the phenotype data.

  Fixed a problem in read.cross with format "gary" or "csv" for
  ensuring that phenotypes that appear to be numeric are read as
  numeric and not as factors.

  Modified the function getsex(), which finds and interprets the sex
  and pgm columns in the phenotype data, for the case where sex is
  read as a factor with just one level (either "F", "f", "M", or "m").

  Added more understandable warning/error messages to plot.scanone if
  a chromosome ID in the "chr" argument doesn't match those in the
  scanone output.

  Fixed a problem in the example data "badorder"; chromosomes 2 and 3
  were switched.

  Fixed a bug in read.cross for the QTL Cartographer format for the
  case that there is just one individual.

  Modified some of the C calls to FORTRAN subroutines, using the
  macro F77_CALL(), as this is recommended in the R documentation.
  (Fortran routines currently used: dqrls, dpoco, dposl)

  Modified est.map so that it removes individuals with fewer than two
  typed markers.  Their presence is of no value in estimating the map, 
  and can really slow things down.

  Revised a number of the help files to make the automated tests of
  the integrity of the software much faster.  

  Revised read.cross.mm() so that (a) the cross type is taken as the
  4th word (rather than the last word) on the first line, in case
  someone includes additional characters, and (b) if the sample map
  format is used but chromosome assignments are not provided, a
  meaningful error message is displayed. 

  Made a few very minor revisions to the "rqtltour.pdf" tutorial.

  Revised getgenonames() and reviseXdata() to remove the x.treatment
  argument, which is now assumed to be "full".  Revised effectplot()
  and plot.pxg() accordingly.

  Modified the utility function to do map expansion in RIs for the X
  chromosome.  Need to modify things further to take account of the
  lack of balance on the X chromosome...it's quite different from a
  backcross.

  Revised plot.pxg() so that it can take a vector of marker names
  [from Brian Yandell].

  Revised plot.scantwo to allow different color schemes and to give
  contours at 1.5 (or other specified values) below the maximum LOD
  [from Brian Yandell].

  Revised summary.scanone and print.summary.scanone so that 
  summary.scanone will never print anything, but will leave it to
  print.summary.scanone to do so.  (Previously, summary.scanone 
  printed a message if there were no peaks above the LOD threshold.)
  summary.scantwo and print.summary.scantwo were revised similarly.

  Modified plot.scanone to allow NAs in the LOD scores.

  Revised scanone and scantwo so that n.perm=0 is treated the same as
  if it were not provided.

  Fixed a bug in plot.rf() in the case that chromosomes are provided
  out of order, in which case the thing plotted garbage.  The fix
  involved revising subset.cross() so that the chr argument is sorted.

  Replaced the example data sets with compressed versions.

  Had to modify part of the C code for scanone with model="2part".
  I'd hard-coded some of the array limits! 

  Changed the default line types and colors in plot.scanone().

  Added a warning for scanone() and scantwo() about the number of
  individuals that are omitted due to missing phenotype or covariate
  information. 

  Revised write.cross so that X chromosome data is converted back
  from our internal format to the standard format.


Version 0.97, 6/19/2003:

Major changes:

  Added an argument "weights" to the functions scanone and scantwo, to
  allow differential weighting of individuals in a genome scan; these
  are only used with model="normal".

  Modified the function "plot.scantwo" for plotting the results from a
  two-dimensional, two-QTL genome scan.  There are two new arguments:
  lower controls what LOD scores are plot in the lower triangle
  (lower="joint" corresponds to the previous version of this
  function), while nodiag controls whether to plot the scanone results
  on the diagonal.  Using lower="cond-int" (the default) gets rid of
  the "coattail" effect often seen when plotting the joint LOD
  scores.  Ted Lystig for suggested this modification.

  Added a new function effectscan() for plotting the estimated allelic
  affect at all markers on selected chromosomes.

Minor changes:

  Modified write.cross so that it will output data in "gary" format.

  Added a function lodint, for calculating LOD support intervals based
  on results from scanone.

  Added a function nmissing(), which calculates the total number of
  missing genotypes for each individual in a cross, or for each
  marker.  

  Added a function pull.geno() for pulling out the set of genotype
  data for a cross as a single big matrix.

  Added a function comparecrosses() for verifying that two objects of
  class "cross" are identical.

  The results of geno.table() now includes P-values from chi-square
  tests for Mendelian segregation.

  Modified the function c.cross for combining crosses.  You can now
  combine backcrosses and intercrosses, provided that they have
  exactly the same genetic maps.  Further, we no longer discard the
  results of sim.geno and calc.genoprob, provided that the same step,
  off.end, and error.prob arguments were used.  

  Added an additional argument, cex, to the function plot.geno, for
  control of the size of the points in the plot.  Also changed the
  orientation of the plot when horiz=FALSE, so that the centromere is
  at the top of the figure rather than the bottom.

  Fixed calc.pairprob so that it will work for RI lines ("risib" or
  "riself").  Thus, scantwo should work with RI lines now.

  Updated read.cross for format="gary" so that the marker positions
  file ("mapfile") and phenotype names file ("pnamesfile") are not
  necessary.  Set these arguments to NULL (e.g., mapfile=NULL) if the
  corresponding files are not available.

  Added a "chr" argument to max.scanone, so you can get the maximum
  LOD score for a particular chromosome.

  Revised the function switch.order() so that, if estimated
  recombination fractions are present (i.e., est.rf() was used), these
  are revised appropriately; previously they had been removed.  
  Also added err and map.function arguments, to be passed to est.map()
  when the map is re-estimated.

  Revised scanone() and scantwo() slightly; the statement for
  producing a warning regarding the use of method=="im" (vs "imp" or
  "em") was slightly wrong. 

  Fixed a slight bug in scanqtl() for the case that a fixed position
  is provided rather than a range (commented out two lines).

  summary.cross() now prints a warning if $data objects are data
  frames. (They should be simple matrices.)

  summary.cross() now prints a warning message if the genetic maps are
  not matrices with 2 rows for "f2ss" and "4way" crosses, or are
  matrices for other crosses.

  drop.markers() now prints a warning if some markers were not found.

  Added arguments ylim and add.legend to the function effectplot().

  Added arguments xlim and mtick to function plot.scanone().  (mtick
  allows marker locations to be indicated by triangles rather than
  line segments.)

  Fixed a bug in read.cross for the case that phenotypes have values
  like "1x2".

  Fixed a slight bug in write.cross for the qtlcart format.

  Fixed a bug in read.cross for the qtlcart format regarding the
  determination of whether a chromosome is autosomal or the X.
  (Previously, looked for an "X" or "x" in the marker names; now look
  at whether the chromosome names contains an "X" or "x".)

  Fixed a bug in makeqtl() for the case of a four-way cross.  (Hadn't
  dealt properly with sex-specific maps.

  fitqtl() now stops with a more meaningful error message if imputed
  genotypes are not available in the input "qtl" object. 

  Revised the marker names for the X chromosome in the map10 dataset
  that is included.

  Revised est.map() for the case of a sex-specific f2 (cross type
  "f2ss"); the starting map for the EM algorithm is randomized a bit. 

  Revised a bunch of the R code files so that paste() is not included
  within stop() or warn().

  In a couple of utility functions for the hidden Markov model engine,
  I need access to the log1p() function, but I'm having trouble with
  that in Windows.  Thus, in Windows only, I use log(1+x) in place of
  the preferred log1p() function.

  Added tests of input/output that are run when doing a check of the
  package.  


Version 0.96, 9/13/2002:

Major changes:

  None.

Minor changes:

  Added Listeria data in QTL Cartographer format to the sampledata
  directory.

  Revised read.cross and write.cross for QTL Cartographer format, so
  that the cross types are converted between those of R/qtl ("f2",
  "bc", "riself", "risib") and those of QTL Cartographer ("RI0",
  "RI1", "RI2", "B1", "B2", "SF2", "RF2").

  Revised read.cross for the Mapmaker format. The map file can now be
  in a second format, ".maps", which is created by Mapmaker/exp.  The
  function determines whether it has been presented with the .maps
  format or the 2- or 3-column tabular format that has been
  available.  Brian Yandell wrote the function to read ".maps" files.

  Fixed a small bug in write.cross for the Mapmaker format, and
  modified the ".prep" file that is created, so that marker distances
  are no longer included, and including lines "framework chr*".

  Revised read.cross with format="csv", so that it gives more clear
  error messages in some cases.

  Updated the R/qtl tutorial, rqtltour.pdf.  This is now in a
  directory "docs" in the R/qtl distribution.


Version 0.95, 8/1/2002:

Major changes:	

  Modified the functions scanone and scantwo in order to treat the X
  chromosome appropriately.  Each has a new argument, x.treatment,
  which indicates how to treat the X chromosome (in particular,
  whether hemizygous males should be treated the same as homozygous
  females).  For analysis to proceed properly, there should be
  columns "sex" and "pgm" in the phenotype data, indicating the sex
  of each individual, and the direction of the cross.  See the X
  chromosome section of the help file for read.cross for more
  information.

  Added another argument to plot.scanone, "lodcolumn", an integer (or
  a vector of 3 integers) indicating which columns of the scanone
  output should be plotted (generally column 3).

  Added two functions for plotting phenotypes against marker
  genotypes.  plot.pxg() plots the phenotypes against the genotypes
  at a single marker.  effectplot() plots the average phenotypes
  against genotypes at one or two markers (or covariates).  Also
  added a function find.marker() which returns the name of the marker
  closest to a specified position.

  Added facilities for analyzing recombinant inbred lines.  We now
  allow two additional cross types, "riself" (RI lines from selfing)
  and "risib" (RI lines from sibling matings).  Added an internal
  function expand.rf.ri and made important modifications to
  calc.genoprob, sim.geno, argmax.geno, and est.map.  Also modified
  summary.cross, print.summary.cross, geno.table, replace.map,
  discan, ripple, scanone, scantwo, makeqtl, calc.errorlod, est.rf,
  write.cross.mm, write.cross.csv.

  Replaced the example fake.f2 with some new data, which includes
  both males and females and both directions of the intercross, in
  order to illustrate the proper analysis of the X chromosome.

  Modified read.cross and write.cross (and added code from Brian
  Yandell) to read and write data in QTL Cartographer format.

Minor changes:

  Fixed a bug in read.cross; the "genotypes" argument needs to have
  "C" and "D" reversed. "C" = "not BB" = 5 internally; "D" = "not AA"
  = 4 internally.  Thanks to Martin Grandona for identifying the
  problem.  

  Fixed a bug in read.cross for format "csv": an error occurred if
  marker positions were not given and the first individual was
  missing a phenotype.  Thanks to Justin Borevitz and Norman
  Warthmann for identifying the problem.

  Fixed a bug in fitqtl.  Also added type III sums of squares table
  and also nominal P-values.

  Revised the read.cross functions so that if the X chromosome data
  is coded as A:B, it gets re-coded appropriately.

  Revised read.cross.mm and read.cross.csv so that if marker
  positions are included, marker order is taken according to those
  positions.  (Previously, read.cross stopped with an error.)

  Added some additional example data, bristle3 and bristleX, from
  Long et al. (1995) Genetics 139:1273-1291.

  Added an example genetic map, map10, containing 19 autosomes and an
  X chromosome, with chromosome lengths approximately as in the
  mouse and markers at approximately 10 cM spacing.

  Changed web references "biosun01.biostat.jhsph.edu" to
  "www.biostat.jhsph.edu".

  Revised summary.cross to print an error if the cross type is not
  one of "f2", "f2ss", "bc", "4way", "risib", or "riself".

  Revised plot.map so that, when genetic maps are plotted vertically,
  the 1st marker is at the top (rather than at the bottom).


Version 0.94, 5/30/2002:

Major changes:

  Modified scanone and scantwo to include the methods "mr-imp" and
  "mr-argmax", for performing "marker regression" by first filling
  in any missing genotypes by one imputation ("mr-imp") or using the 
  Viterbi algorithm ("mr-argmax").

  Edited functions read.cross.*, argmax.geno, sim.cross, and
  sim.draws, so that the data, argmax and draws portion of a cross
  object are stored as integers.  This can save considerable space.

  Added functions to perform a general scan by imputation:
  fitqtl(), makeqtl(), scanqtl().

Minor changes:

  Edited the read.cross.* functions again; now by default dir = ""
  rather than ".", and I no longer remove any trailing "/" from dir.

  Added checks of genotype values in the function summary.cross.

  Rather than edit the read.cross function to read in X chromosome
  data appropriately, I instead edited its help file, to explain that
  X-linked data should be coded as an autosome in a backcross (with
  genotypes A and H).

  Fixed slight errors in the functions scanone, calc.genoprob,
  discan, calc.pairprob, and sim.geno regarding the naming of the
  genotypes for the 4-way cross.

  Changed a couple of apostrophes to double-quotes in the function
  summary.scantwo.

  Added a Morgan map function (mf.m and imf.m), with revisions to
  argmax.geno, calc.genoprob, calc.pairprob, calc.errorlod, est.map,
  ripple, sim.geno, sim.cross, sim.cross.bc, sim.cross.f2,
  sim.cross.4way, fill.geno.

  Fixed a slight bug in ripple regarding the estimated chromosome
  lengths in the case of a 4-way cross; I was picking out the wrong
  element of the map.

  Fixed a bug in plot.scantwo regarding chromosome labels.

  Fixed bugs in max.scantwo and scantwo.perm regarding infinite LOD
  scores (which comes up especially when running scantwo with
  method="mr").  

  Fixed a bug in read.cross.qtx regarding the determination of
  whether a cross is a backcross or an intercross.  Also fixed the
  case of a backcross coded as H:B rather than A:H.

  Added a warning in summary.cross regarding duplicate markers.

  Modified the example cross data (such as hyper and listeria) so
  that genotypes are stored as integers.

  Updated the "README.txt" file, to include explanations for
  installation of R and R/qtl on Mac OS.

  Changed the default for the na.strings argument in read.cross and
  read.cross.csv to include "NA".

  Changed a couple of lines in write.cross.csv and write.cross.mm for
  the treatment of NA strings.

  Modified ripple so that orders considered are printed in a way that
  the left-most marker in the original order is always to the left
  of the right-most marker in the original order.  

  In various functions, made sure that 0 < error.prob < 1.

  Edited plot.scanone so that when only one chromosome is plotted,
  the chromosome number doesn't appear at the top, and when multiple
  chromosomes are plotted, the chromosome numbers appear at the
  bottom, rather than cumulative cM position.

  Changed the addcov and intcov arguments to scanone and scantwo to
  addcovar and intcovar, respectively.


Version 0.93, 4/1/2002:

Major changes:

  Added ability to read data in Mapmanager QTX format. This may be
  done via the read.cross function by using the argument
  format="qtx".  Added a file in this format to the sampledata
  directory distributed with R/qtl.

  Modified function ripple(), which compares marker orders, so that
  it may evaluate counts of obligate crossovers, which will be
  extremely quick relative to performing an exact likelihood
  calculation.  This method has been made the default.

Minor changes:

  Added functions max.scanone and max.scantwo for getting information
  on the location with the highest LOD or joint and interaction LODs
 
  Modified summary.scantwo so that if the argument thresholds has
  length 1, the interaction and conditional thresholds are assumed to
  be 0 (so that all chromosome pairs for which the maximum joint LOD
  is greater than the given threshold are printed).

  Revised the C functions emit_bc(), emit_f2(), emit_f2ss() and
  emit_4way() so that unexpected observed genotypes are treated as
  missing. 
  
  Revised read.cross, read.cross.csv and read.cross.mm slightly, so
  that estimate.map is TRUE by default, and so that the genetic maps
  are re-estimated only if both estimate.map is TRUE and the genetic
  map is missing from the input files.  If estimate.map is FALSE and
  the genetic map is missing from the input files, a dummy genetic
  map is inserted.

  Fixed a bug in sim.cross, sorting the "model" matrix in advance of
  performing the simulation, because the results were erroneous if
  QTLs were specified out of order.

  Edited the functions read.cross.* to use the function file.path()
  to create file names.


Version 0.92, 2/12/2002:

Minor changes:

  In read.cross.mm and read.cross.csv, when using the function
  read.table, we replaced the use of as.is=TRUE with
  colClasses="character". Apparently as.is=TRUE didn't work in R
  version 1.4.0.  

  In read.cross, changed the default of the argument "estimate.map"
  to FALSE.


Version 0.91, 12/3/2001:

Minor changes:

  Fixed a problem with chromosome labels in plot.scantwo.

  Fixed a slight bug in summary.ripple.

  Previously forgot to implement the use of the "main" arg for
  plot.scanone. 

  Fixed a slight bug in read.cross.gary related to having just one
  marker on a chromosome.

  Fixed a slight bug in plot.cross for the case auto.layout=FALSE.

  Revised read.cross so that, for the csv format, if the argument
  "genotypes" is NULL, the genotypes are assumed to be correct. If
  there are genotypes > 5, it is assumed to be a 4-way cross.

  For some reason, the wrapper for est_map for 4-way crosses got
  deleted.  I've re-written it.  Hopefully it works!

  Fixed a slight bug in plot.map for plotting two sex-specific maps.
  (The function works by pulling apart the sex-specific maps and then
  calling plot.map again twice.  After those calls, it should return.)

  Expanded examples in the help file for fake.4way.

  Fixed a bug in create.map for sex-specific maps.

  Revised calc.genoprob, argmax.geno and sim.geno so that, in the case
  of one marker on a chromosome, off.end is forced to be > 0.

  Revised plot.scanone so that if there is exactly one LOD score for a
  chromosome, a small segment is plotted rather than a dot.

  Fixed a couple of minor bugs in read.cross for the mapmaker format:
  in dealing with the "symbols" information in the mapmaker file, and
  in counting the number of lines in the file.  

  Added a utility function checkcovar() to check phenotypes and
  covariates in scanone and scantwo (thus removing some redundancy).


Version 0.90, 11/24/2001:

Minor changes:

  Replaced the example data fake.bc with something that will allow the
  illustration of the use of covariates.

  Added print.summary.ripple; I'd forgotten to write it before.

  Added an updated tutorial on R/qtl, distributed as the file
  rqtltour.pdf


Version 0.89, 11/22/2001:

Major changes:

  Consolidated scanone, vbscan and discan into the single function
  scanone, with an argument model=c("normal","binary","2part","np").
  The non-parametric "method" is now a "model".  

  Buried scanone.perm and scantwo.perm as internal functions.  To do
  permutation tests, one now uses the main functions (such as scantwo)
  and specifies the n.perm argument.

  Similarly, read.cross.* and write.cross.* were buried, so that the
  user is expected to call either read.cross or write.cross rather
  than calling the format-specific functions directly.  This was done
  anticipating an increase in the number of such format-specific
  read.cross functions. 

  Got rid of find.errors and plot.errors, as I don't like them.  Use
  calc.errorlod and plot.errorlod instead.  

  Wanted to toss pull.chr, but instead just kept an internal version
  which calls subset.cross and prints a warning, in case our one
  official user has code which requires it.

Minor changes:

  Added an "eq.spacing" argument to sim.map for generating maps with
  equally-spaced markers.  This seems more useful than putting them
  down at random.

  Re-wrote a great deal of the help documentation (especially the
  examples and details).

  Added a new example data set, badorder, with some errors in marker
  order.  (This is to illustrate the functions est.rf, ripple and
  switch.order.) 

  Fixed a slight error in summary.scantwo.  We print pairs of loci
  only if their joint LOD exceeds its threshold and either (a) the
  epistasis LOD exceeds its threshold or (b) both conditional LODs
  exceed their thresholds.  

  Totally re-wrote print.summary.scantwo.  It was unnecessarily
  complicated before.

  Made a very slight change regarding the zlim in plot.scantwo.

  Fixed scantwo, summary.scantwo and plot.scantwo to deal with cases
  of bad LOD scores (NAs, negative numbers and Infs).  A warning
  message will always be printed.

  Modified scanone_imp.c so that nullRss and altRss don't allocate
  memory each time.  Fixed a very bad bug in dealing with interactive
  covariates.  Fixed a single-character bug in scantwo_mr.c that was
  causing a core dump.


Version 0.88, 11/20/2001:

Major changes:

  Added a scantwo function to do two-dimensional genome scans,
  calculating LOD scores for a two-QTL model and to test epistasis
  between each pair, with calculations done by imputation, Haley-Knott
  regression, marker regression or the EM algorithm.  Hao Wu wrote the
  imputation method. 

  With Hao Wu, wrote plot.scantwo to plot the results of scantwo,
  summary.scantwo to summarize the results, and scantwo.perm to get
  genome-wide LOD thresholds for a 2-dimensional genome scan by
  permutation tests.  The summary.scantwo function uses a criterion
  due to Gary Churchill and Saunak Sen.

  Added a C function to calculate joint genotype probabilities for
  pairs of putative QTLs on the same chromosome.  Because the
  resulting set of probabilities can take up a lot of memory, we're
  not going to make these accessible to the user.  The function
  calc.pairprob was created, but this is not to be called by the user,
  but rather will be called when needed.

Minor changes: 

  Added a "method" argument to vbscan, even though only method="em" is
  currently available. 

  Revised scanone, scantwo, discan, vbscan, and their corresponding
  ".perm" functions so that the output has attribute "method" to
  indicate what method was used and attribute "type" to indicate the
  type of cross that was analyzed.  

  Changed method="im" to method="em" in scanone and discan; changed
  method="markreg" again, this time to method="mg".  Changed the order
  of these methods in scanone.

  calc.genoprob now includes an attribute "map.function" with the
  probabilities.

  Changed colors plotted in plot.rf.

  Modified the C function scanone_mr (marker regression) to avoid
  repeatedly running the null model regression in the case of complete
  marker data.  

  Changed a good amount of R code like "1:length(x)" to "seq(along=x)"

  Added a function fill.geno for imputing missing marker data by
  simulation (through sim.geno) or by the Viterbi algorithm (through
  argmax.geno), so that one may perform quick-and-dirty (with an
  emphasis on dirty) genome scans by marker regression.

  Fixed a small bug in sim.cross.f2.

  Fixed some problems related to chromosomes with only one marker:
  read.cross.csv, create.map, subset.cross.

  Fixed a bug in the location of chromosome labels in plot.scanone.
  Added an argument "main" for placing a title on the plot. 

  Revised lots of little pieces of code using "drop=FALSE" when
  subsetting a matrix or array in order to retain the structure.

  read.cross.csv can now deal with categorical phenotypes, and
  plot.cross was revised to deal with such non-numeric phenotypes. 
  Added an argument "auto.layout"; if TRUE, mfrow is set so that the
  many plots produced will all fit in one figure.  par(ask=TRUE) is no
  longer ever set.

  Revised sim.cross so that when keep.qtlgeno=TRUE, the QTL genotypes
  are retained in a component cross$qtlgeno (rather than within the
  data matrices).


Version 0.87, 11/13/2001:

Major changes:

  Hao Wu (hao@jax.org) has implemented the imputation method of Sen
  and Churchill (2001) for a genome scan, included as method="imp" in
  the function scanone.  

  Added a non-parametric method to the function scanone, using a
  modified version of the Kruskal-Wallis test (cf Kruglyak and Lander
  1995).

  scanone now allows the use of covariates for all methods except the
  non-parametric method. 

  Phenotypes in a cross object are now a data.frame.  Modified example
  data files and the following functions to make this work:
  sim.cross.*, read.cross.*, summary.cross, write.cross.csv. 
  
Minor changes:  

  Changed the name of the "anova" method in scanone to "markreg".

  Changed the name of the argument "print.rf" in the est.map function
  to "trace."

  Modified the default cutoff in top.errorlod; allow cuts and colors
  in plot.errorlod to be specified by the user.

  summary.cross() now checks that markers are in increasing order.

  Made the third row (marker positions) in csv file optional in
  read.cross.csv. 

  Added a utility function subset.cross() for pulling out specified
  chromosomes or groups of individuals from a cross object.  We should
  not need pull.chr() any longer. 

  Added a utility function c.cross() for concatenating multiple cross
  objects.  

  Changed stopping rules for discan, discan.perm, vbscan, vbscan.perm,
  est.map, est.rf, ripple, scanone, scanone.perm: 
  |x(s+1) - x(s)| < e {|x(s)| + e*100} where by default e = 1e-4

  Fixed the utility function create.map() for the case where the
  genetic map starts at somewhere other than 0.

  Placed help information for discan.perm, scanone.perm and
  vbscan.perm within the files for discan, scanone and vbscan,
  respectively.  


Version 0.86, 11/4/2001:

  Fixed a *real* bug in argmax.geno().  

  Added discan() for doing interval mapping with a dichotomous trait.

  Added documentation for the print.summary.* and internal functions.

  Edited documentation files to conform to R guidelines.

  Reduced the minimum value of the error.prob argument in est.map,
  calc.genoprob, argmax.geno and sim.geno from 1e-14 to 1e-50.


Version 0.85, 10/29/2001:

  Tried to fix up some of the plot.* and summary.* functions so that I
  don't get warning messages in "R CMD check".	

  Fixed a few minor problems in the help files.

  Updated the a.starting.point() help file.

  Fixed a couple of problems in marker order in the hyper data.

  Added plot.info() for plotting the proportion of missing information
  in the genotype data.

  Fixed bug in plot.scanone() that led to problems in overlaying LOD
  curves using add=TRUE.  Added an argument, gap, to specify the
  distance between chromosomes.

  Fixed bug in print.summary.scanone() that resulted in an error when
  there was just one chromosome with LOD above the specified
  threshold.


Version 0.84, 10/10/2001:

  Fixed slight error in sim.cross(); marker genotypes were removed
  rather than qtl genotypes.  We now use the function drop.qtlgeno()
  to do this.

  Changed anova method in scanone() to use observed genotypes.
  Individuals with missing or partially missing genotypes are dropped.  

  Added Haley-Knott regression method to scanone(). 

  Added a function ripple() for comparing marker orders for a single
  chromosome, looking at all permutations of a sliding window of
  markers.  Also added switch.order() to switch the order of markers
  on a specified chromosome.

  Removed null markers from listeria data.

  Fixed bugs in read.cross.mm() and write.cross.mm().

  Added csv and mapmaker format files to sample data directory.

  Allow specification of starting value is scanone and vbscan

  Added a document "rqtltour.pdf" describing the package and giving a
  couple of examples.


Version 0.83, 09/23/2001:

  Fixed a very slight bug in summary.scanone().

  Changed the argument "which.chr" in plot.scanone() to simply "chr".

  Added a "chr" argument to plot.missing().


Version 0.82, 09/20/2001:

  Added write.cross.csv(), for writing data in comma-delimited format.
  Changed write.mm() to write.cross.mm() and added write.cross() as a
  wrapper to these two functions. 

  All functions that use map functions now allow use of the
  Carter-Falconer map function.

  Changed remove.markers(), remove.nullmarkers(), and remove.qtlgeno()
  to drop.markers(), drop.nullmarkers() and drop.qtlgeno().

  Revised plot.rf() so that missing values appear in gray.

  Added read.cross.gary(), to read data in Gary's format, and
  read.cross.csv(), to read data in comma-delimited format.

  Fixed the bugs in read.cross.mm(); see BUGS.txt.

  Fixed summary.cross() so that it checks marker names in the data and
  the map.

  Added summary.scanone(), giving a summary of the output of
  scanone(). 

  Added possibility of F2 intercross with sex-specific maps.  Use
  class "f2ss" rather than "f2."  This is in the testing stage.
  The only revised functions, at this point, are est.map() and
  calc.genoprob().

  Added a function convert2ss() to convert a cross object from "f2"
  to "f2ss" format.


Version 0.81, 09/16/2001:

  plot.scanone can now plot three scanone outputs, and includes an
  "add" argument for adding additional outputs to a current plot.

  Replaced 1e-10 with 1e-14 as tolerance value for error probability
  and minimum map distance.

  Changed the "min.d" argument in plot.geno() to "min.sep", taken to
  be a percent of the chromosome length.

  Added Carter-Falconer map function: mf.cf() and imf.cf().  Note that
  there is no closed-form version of mf.cf(), and so I use the R
  function uniroot().

  Fixed a slight error in replace.map().

  In est.map, calculate the log likelihood at the end; this is saved
  as an attribute, "loglik" for each chromosome's map.  If the "print"
  argument is used, print the loglik, too.

  Made error.prob=0 the default for the functions argmax.geno(), 
  calc.genoprob(), est.map(), and sim.geno().

  Fixed the file permissions for many of the files, so that they are
  readable by all users.


Version 0.80, 08/07/2001:

  Eliminated the map component of the results of calc.genoprob,
  argmax.geno, and sim.geno.  Since we are now including attributes
  "error.prob," "step," and "off.end," we can just use create.map() to
  recreate the map each time, without having to carry it along.

  Changed the name of plot.geno() to plot.missing() and plot.chr() to
  plot.geno().  

  Added vbscan() and vbscan.perm() to perform the analysis described
  in V Boyartchuk et al. (2001), for a phenotype where some
  individuals have some quantitative phenotype, while for others it is
  undefined.  (Examples: the size of a lesion, where some individuals
  exhibit no lesion; time-to-death after an infection, where some
  individuals recover from the infection.)


Version 0.79, 07/27/2001:

  Added map functions (and inversion map functions) for Haldane and
  Kosambi, so that I'm not re-creating them all of the time within
  functions. 

  Added a function plot.chr() to plot genotypes for a specific
  chromosome, with likely errors (as determined by calc.errorlod() or
  find.errors()) highlighted.

  Added a warning to the help file for argmax.geno.  The results
  greatly depend on the value of the step argument, and may not be
  terribly trustworthy.  Also, if several sequences (of underlying
  genotypes) are all most likely, our method of randomly choosing
  among them is not right...recombination events are too far to the
  right.


Version 0.78, 07/24/2001:

  Fixed a small bug in create.map(), which is used by
  calc.genoprob().  An error occurred in the case of a genetic
  map with equally spaced markers, when the argument "step" was set to
  be exactly the inter-marker distance.

  Modified calc.genoprob(), calc.argmax(), sim.geno() and
  calc.errorlod() so that their corresponding components have 
  attributes "error.prob", "step" and "off.end" (only "error.prob" for
  calc.errorlod()), specifying the corresponding values used in the
  calculations.  Modified calc.errorlod() to re-run calc.genoprob() if
  the error.prob attribute is different from the corresponding
  argument. 


Version 0.77, 06/22/2001:

  Fixed a small bug in sim.cross(), where dimnames of error component
  was wrong, when simulating genotyping errors with a QTL present.


Version 0.76, 05/17/2001:

  This is a totally revised version of the package.  Most
  importantly, the data structure for a cross has completely
  changed.  The function convert.cross is included, for converting
  data from the old structure to the new one.  See the help file for
  read.cross for a description of the new data structure.  

  The main hidden Markov model engine has been rewritten, to make
  things more flexible and general.  We've now implemented the Viterbi
  algorithm, in the function argmax.geno, to calculate the most likely
  sequence of underlying genotypes, given the observed marker data,
  and we've fixed the calculation of the Lincoln and Lander error LOD
  scores.  The analysis of phase-known four-way crosses is now
  possible.

  The "singlescan" function (to do a genome scan with a single QTL
  model) is now called "scanone" (to save a few keystrokes).  Note
  that this function does not yet allow the use of covariates.  We'll
  add that feature in the near future.  

  Saunak Sen and I are now working together on this project, and so
  things will begin to progress more quickly (we hope).

----------------------------------------------------------------------
End of STATUS.txt
